"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7958],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=d(r),k=n,u=h["".concat(s,".").concat(k)]||h[k]||c[k]||o;return r?a.createElement(u,l(l({ref:t},p),{},{components:r})):a.createElement(u,l({ref:t},p))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var d=2;d<o;d++)l[d]=r[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},3851:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=r(7462),n=(r(7294),r(3905));const o={},l="Glossary",i={unversionedId:"validator/glossary",id:"validator/glossary",title:"Glossary",description:"Block producer",source:"@site/docs/validator/glossary.md",sourceDirName:"validator",slug:"/validator/glossary",permalink:"/docs/validator/glossary",draft:!1,editUrl:"https://github.com/bttcprotocol/bttc-docs/tree/master/docs/validator/glossary.md",tags:[],version:"current",lastUpdatedAt:1724138736,formattedLastUpdatedAt:"Aug 20, 2024",frontMatter:{},sidebar:"validatorSidebar",previous:{title:"Commission Operations",permalink:"/docs/validator/validator-commission-operations"},next:{title:"Validator FAQ",permalink:"/docs/faq/validator-faq"}},s={},d=[{value:"Block producer",id:"block-producer",level:2},{value:"Checkpoint transaction",id:"checkpoint-transaction",level:2},{value:"Commission",id:"commission",level:2},{value:"Delegator",id:"delegator",level:2},{value:"Full node",id:"full-node",level:2},{value:"Sentry",id:"sentry",level:2},{value:"Delivery",id:"delivery",level:2},{value:"Bttc",id:"bttc",level:2},{value:"Owner address",id:"owner-address",level:2},{value:"Signer address",id:"signer-address",level:2},{value:"Proposer",id:"proposer",level:2},{value:"Span",id:"span",level:2},{value:"Staking",id:"staking",level:2},{value:"Validator",id:"validator",level:2}],p={toc:d};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"glossary"},"Glossary"),(0,n.kt)("h2",{id:"block-producer"},"Block producer"),(0,n.kt)("p",null,"A block producer is an active ",(0,n.kt)("a",{parentName:"p",href:"#validator"},"validator")," selected to act as block producer for a ",(0,n.kt)("a",{parentName:"p",href:"#span"},"span"),"."),(0,n.kt)("p",null,"A block producer is responsible for creating blocks and broadcasting the created blocks to the network."),(0,n.kt)("h2",{id:"checkpoint-transaction"},"Checkpoint transaction"),(0,n.kt)("p",null,"A checkpoint transaction is a transaction containing the Merkle root of blocks of the ",(0,n.kt)("a",{parentName:"p",href:"#bttc"},"Bttc")," layer between the checkpoint intervals."),(0,n.kt)("p",null,"The transaction is committed to the BTTC staking contracts on the TRON/BSC/Ethereum mainnet by a ",(0,n.kt)("a",{parentName:"p",href:"#delivery"},"Delivery")," node."),(0,n.kt)("h2",{id:"commission"},"Commission"),(0,n.kt)("p",null,"A commission is the percentage of the rewards taken by ",(0,n.kt)("a",{parentName:"p",href:"#validator"},"validators")," from the ",(0,n.kt)("a",{parentName:"p",href:"#delegator"},"delegators")," who stake with the validators."),(0,n.kt)("h2",{id:"delegator"},"Delegator"),(0,n.kt)("p",null,"The delegator role stakes the BTT tokens to secure the BTTC Network with existing ",(0,n.kt)("a",{parentName:"p",href:"#validator"},"validators")," without running the nodes themselves."),(0,n.kt)("h2",{id:"full-node"},"Full node"),(0,n.kt)("p",null,"A full node is a fully synced ",(0,n.kt)("a",{parentName:"p",href:"#sentry"},"sentry node")," running both ",(0,n.kt)("a",{parentName:"p",href:"#Delivery"},"Delivery")," and ",(0,n.kt)("a",{parentName:"p",href:"#bttc"},"Bttc"),"."),(0,n.kt)("p",null,"See also ",(0,n.kt)("a",{parentName:"p",href:"/docs/node/build-fullnode"},"Full Node Deployment"),"."),(0,n.kt)("h2",{id:"sentry"},"Sentry"),(0,n.kt)("p",null,"A sentry node is a node running both the ",(0,n.kt)("a",{parentName:"p",href:"#delivery"},"Delivery")," node and the ",(0,n.kt)("a",{parentName:"p",href:"#bttc"},"Bttc")," node to download the data from other nodes on the network and to propagate the ",(0,n.kt)("a",{parentName:"p",href:"#validator"},"validator")," data on the network."),(0,n.kt)("p",null,"A sentry node is open to all other sentry nodes on the network."),(0,n.kt)("h2",{id:"delivery"},"Delivery"),(0,n.kt)("p",null,"A Delivery node is a node running in parallel to the TRON/BSC/Ethereum mainnet, monitoring the set of contracts deployed on the TRON/BSC/Ethereum mainnet, and committing the BTTC Network ",(0,n.kt)("a",{parentName:"p",href:"#checkpoint-transaction"},"checkpoints")," to the TRON/BSC/Ethereum mainnet."),(0,n.kt)("p",null,"Delivery is based on ",(0,n.kt)("a",{parentName:"p",href:"https://tendermint.com/"},"Tendermint"),"."),(0,n.kt)("h2",{id:"bttc"},"Bttc"),(0,n.kt)("p",null,"A Bttc node is a node producing blocks on the BTTC Network."),(0,n.kt)("p",null,"Bttc is based on ",(0,n.kt)("a",{parentName:"p",href:"https://geth.ethereum.org/"},"Go Ethereum"),"."),(0,n.kt)("h2",{id:"owner-address"},"Owner address"),(0,n.kt)("p",null,"An owner address is the address used to stake, restake, change the signer address, withdraw rewards and manage delegation related parameters on the TRON mainnet."),(0,n.kt)("p",null,"While the ",(0,n.kt)("a",{parentName:"p",href:"#signer-address"},"signer key")," is kept on the node and is considered a ",(0,n.kt)("em",{parentName:"p"},"hot")," wallet, the owner key must be kept very secure, used infrequently, and is considered a ",(0,n.kt)("em",{parentName:"p"},"cold")," wallet."),(0,n.kt)("h2",{id:"signer-address"},"Signer address"),(0,n.kt)("p",null,"A signer address is the address of an TRON account of the ",(0,n.kt)("a",{parentName:"p",href:"#delivery"},"Delivery")," validator node. The signer address signs and submits the ",(0,n.kt)("a",{parentName:"p",href:"#checkpoint-transaction"},"checkpoint transactions"),"."),(0,n.kt)("p",null,"While the signer key is kept on the node and is considered a ",(0,n.kt)("em",{parentName:"p"},"hot")," wallet, the ",(0,n.kt)("a",{parentName:"p",href:"#owner-address"},"owner key")," must be kept very secure, used infrequently, and is considered a ",(0,n.kt)("em",{parentName:"p"},"cold")," wallet."),(0,n.kt)("h2",{id:"proposer"},"Proposer"),(0,n.kt)("p",null,"A proposer is the ",(0,n.kt)("a",{parentName:"p",href:"#validator"},"validator")," selected by the algorithm to propose a new block."),(0,n.kt)("p",null,"A proposer is also responsible for collecting all signatures for a particular ",(0,n.kt)("a",{parentName:"p",href:"#checkpoint-transaction"},"checkpoint")," and committing the checkpoint to the TRON mainnet."),(0,n.kt)("h2",{id:"span"},"Span"),(0,n.kt)("p",null,"A logically defined set of blocks for which a set of validators is chosen from all the available ",(0,n.kt)("a",{parentName:"p",href:"#validator"},"validators"),"."),(0,n.kt)("p",null,"The selection of each span is decided by at least 2/3 of the validators in terms of the staking power."),(0,n.kt)("h2",{id:"staking"},"Staking"),(0,n.kt)("p",null,"Staking is the process of locking up tokens into a deposit to earn the right to validate and produce blocks on a blockchain. Typically staking is done in the native token for the network \u2014 for the BTT token is locked up by validators/stakers in the BTTC Network. Other examples include MATIC in Polygon, ETH in ETH 2.0, ATOM in Cosmos, etc."),(0,n.kt)("h2",{id:"validator"},"Validator"),(0,n.kt)("p",null,"The validator role stakes the BTT tokens and is running both the ",(0,n.kt)("a",{parentName:"p",href:"#delivery"},"Delivery")," node and the ",(0,n.kt)("a",{parentName:"p",href:"#bttc"},"Bttc")," node to commit the network checkpoints to the TRON/BSC/Ethereum mainnet and to produce blocks on the network."),(0,n.kt)("p",null,"A validator node is only open to its ",(0,n.kt)("a",{parentName:"p",href:"#sentry"},"sentry")," node and closed to the rest of the network."))}c.isMDXComponent=!0}}]);