"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3405],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>m});var a=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function p(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=a.createContext({}),s=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):p(p({},e),t)),n},c=function(t){var e=s(t.components);return a.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,l=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),u=s(n),m=o,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,p(p({ref:e},c),{},{components:n})):a.createElement(h,p({ref:e},c))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,p=new Array(r);p[0]=u;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:o,p[1]=i;for(var s=2;s<r;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6267:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var a=n(7462),o=(n(7294),n(3905));const r={},p="BTTC NFT Tutorial",i={unversionedId:"assets/nfts/BTTC-NFT-Tutorial",id:"assets/nfts/BTTC-NFT-Tutorial",title:"BTTC NFT Tutorial",description:"Please refer to Simple NFT Example on BTTC Donau Testnet to check how to build, mint, and send around your own ERC721 with BTTC Donau testnet!",source:"@site/docs/assets/nfts/BTTC-NFT-Tutorial.md",sourceDirName:"assets/nfts",slug:"/assets/nfts/BTTC-NFT-Tutorial",permalink:"/docs/assets/nfts/BTTC-NFT-Tutorial",draft:!1,editUrl:"https://github.com/bttcprotocol/bttc-docs/tree/master/docs/assets/nfts/BTTC-NFT-Tutorial.md",tags:[],version:"current",lastUpdatedAt:1724138736,formattedLastUpdatedAt:"Aug 20, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"NFTs",permalink:"/docs/category/nfts"},next:{title:"Deploy Contract with Remix",permalink:"/docs/smartcontract/deploy-contracts"}},l={},s=[{value:"App Configuration",id:"app-configuration",level:2},{value:"Config IPFS",id:"config-ipfs",level:2},{value:"Mint NFT",id:"mint-nft",level:2},{value:"Configuration for BTTC Donau testnet",id:"configuration-for-bttc-donau-testnet",level:2},{value:"Generate Account to Deploy Contract",id:"generate-account-to-deploy-contract",level:2}],c={toc:s};function d(t){let{components:e,...r}=t;return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bttc-nft-tutorial"},"BTTC NFT Tutorial"),(0,o.kt)("p",null,"Please refer to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/BTTC-Developer-Hub/bttc-nft-tutorial"},"Simple NFT Example on BTTC Donau Testnet")," to check how to build, mint, and send around your own ERC721 with BTTC Donau testnet!"),(0,o.kt)("h1",{id:"quick-start"},"Quick Start"),(0,o.kt)("p",null,"Required: ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/dist/latest-v12.x/"},"Node")," plus ",(0,o.kt)("a",{parentName:"p",href:"https://classic.yarnpkg.com/en/docs/install/#mac-stable"},"Yarn")," and ",(0,o.kt)("a",{parentName:"p",href:"https://git-scm.com/downloads"},"Git"),(0,o.kt)("br",{parentName:"p"}),"\n","Optional: ",(0,o.kt)("a",{parentName:"p",href:"https://ipfs.tech/#install"},"IPFS")),(0,o.kt)("h2",{id:"app-configuration"},"App Configuration"),(0,o.kt)("p",null,"Open ",(0,o.kt)("inlineCode",{parentName:"p"},"Terminal")," and build the project, please install node in advance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone https://github.com/Jama55/simple-nft-bttc-donau simple-nft-example\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd simple-nft-example\ngit checkout simple-nft-example\nyarn install\nyarn start\n")),(0,o.kt)("p",null,"in a second terminal window, start your frontend"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd simple-nft-example\nyarn chain\n")),(0,o.kt)("p",null,"in a third terminal window, deploy your contract, use ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost")," as your network"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd simple-nft-example\nyarn deploy --network NETWORK_OF_CHOICE (localhost, bttc_donau)\n")),(0,o.kt)("p",null,"Open http://localhost:3000 to see the app."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(9263).Z,width:"1327",height:"993"})),(0,o.kt)("h2",{id:"config-ipfs"},"Config IPFS"),(0,o.kt)("p",null,"If you don't have an Infura IPFS project, please use desktop or command-line version of ",(0,o.kt)("a",{parentName:"p",href:"https://ipfs.tech/#install"},(0,o.kt)("strong",{parentName:"a"},"IPFS")),". You'll need to edit below scripts to fit your needs."),(0,o.kt)("p",null,"IPFS API & port -> ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/react-app/scripts/ipfs.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"const localhost = {\n   host: 'localhost',\n   port: '5001',\n   protocol: 'http',\n   path: 'api/v0'\n};\n")),(0,o.kt)("p",null,"Mint the token will require uploading to IPFS -> ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/hardhat/scripts/mint.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"const ipfs = ipfsAPI({\n  host: '127.0.0.1', \n  port: '5001', \n  protocol: 'http', \n  path: 'api/v0'\n});\n")),(0,o.kt)("p",null,"The frontend's test upload will use IPFS as well -> ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/react-app/src/App.jsx")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'const ipfs = ipfsAPI({ \n  host: "localhost", \n  port: "5001", \n  protocol: "http"\n });\n')),(0,o.kt)("p",null,"There might be CORS problem\uff0cchange the config file of IPFS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin \'["your whitelist address", "http://localhost:3000", "http://127.0.0.1:5001"]\'\nipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods \'["PUT", "POST"]\'\n')),(0,o.kt)("p",null,"Desktop version please go to ",(0,o.kt)("inlineCode",{parentName:"p"},"Settings")," and change the ",(0,o.kt)("inlineCode",{parentName:"p"},"IPFS CONFIG")," section, don't forget to save and restart the service."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(6193).Z,width:"2044",height:"1512"})),(0,o.kt)("p",null,"For Infura IPFS project\uff0cchange the project ID and secret in ",(0,o.kt)("inlineCode",{parentName:"p"},"mint.js")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"App.jsx")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"const projectId = 'YOUR INFURA PROJECT ID';\nconst projectSecret = 'YOUR INFURA PROJECT SECRET';\n")),(0,o.kt)("h2",{id:"mint-nft"},"Mint NFT"),(0,o.kt)("p",null," After the IPFS configuration is done, go the the frontend and test upload a file to IPFS, make sure the service is up and running. "),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(6828).Z,width:"1706",height:"1242"})),(0,o.kt)("p",null,"Before minting, go the ",(0,o.kt)("inlineCode",{parentName:"p"},"mint.js")," script and change ",(0,o.kt)("inlineCode",{parentName:"p"},"toAddress")," linked in the ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:3000"),", you could use MetaMask or other wallets. Then we go back to the terminal and start minting NFT."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn mint\n")),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(7218).Z,width:"1382",height:"716"})),(0,o.kt)("p",null,"After the NFTs are minted, try to send around the token (in congnitive window)."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(4724).Z,width:"1436",height:"1390"})),(0,o.kt)("h1",{id:"deploy-the-contract"},"Deploy the Contract!"),(0,o.kt)("h2",{id:"configuration-for-bttc-donau-testnet"},"Configuration for BTTC Donau testnet"),(0,o.kt)("p",null,"Let's move from the ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost")," to the real world, take BTTC Donau testnet as an example."),(0,o.kt)("p",null,"Firtst edit ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/hardhat/hardhat.config.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'donau_bttc:{\n   url: "https://pre-rpc.bt.io/",\n   gasPrice: 300000000000000,\n   accounts:{\n      mnemonic: mnemonic(),\n   },\n}\n// Change default network\uff0cfrom localhost to BTTC testnet\nconst defaultNetwork = "donau_bttc";\n')),(0,o.kt)("p",null,"Edit ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/react-app/src/constants.js")," as well"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'donau_bttc: {\n   name: "donau_bttc",\n   color: "#e8a094",\n   chainId: 1029,\n   rpcUrl: `https://pre-rpc.bt.io/`,\n   faucet: "https://testfaucet.bt.io/#/",\n   blockExplorer: "https://testscan.bt.io/",\n}\n')),(0,o.kt)("p",null,"Modify ",(0,o.kt)("inlineCode",{parentName:"p"},"App.jsx")," to change the default deloying network"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"const targetNetwork = NETWORKS.donau_bttc; \n")),(0,o.kt)("h2",{id:"generate-account-to-deploy-contract"},"Generate Account to Deploy Contract"),(0,o.kt)("p",null,"First run ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn generate")," and get a new address. View account info & QR code with ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn account"),", you'll need to fund this account."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(8392).Z,width:"1598",height:"192"})),(0,o.kt)("p",null,"Go to the ",(0,o.kt)("a",{parentName:"p",href:"https://testfaucet.bt.io"},(0,o.kt)("strong",{parentName:"a"},"Faucet"))," and get some test BTTs."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(7096).Z,width:"1318",height:"1015"})),(0,o.kt)("p",null,"Deploy the contract on Donau testnet, if there's any warning related to insufficient gas, please follow the instruction and increase gasPrice or gasLimit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn deploy --network bttc_donau\n")),(0,o.kt)("p",null,"Mint NFT"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn mint\n")),(0,o.kt)("p",null,"Go the chain explorer to view your transaction or follow the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/scaffold-eth/tree/simple-nft-example"},(0,o.kt)("strong",{parentName:"a"},"Original tutorial"))," and ship your app."),(0,o.kt)("h1",{id:"notes"},"Notes"),(0,o.kt)("p",null,"Inspect the ",(0,o.kt)("inlineCode",{parentName:"p"},"Debug Contracts")," tab to figure out what address is the ",(0,o.kt)("inlineCode",{parentName:"p"},"owner")," of ",(0,o.kt)("inlineCode",{parentName:"p"},"YourCollectible"),"?"),(0,o.kt)("p",null,"Edit your deployment script ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy.js")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/hardhat/scripts")),(0,o.kt)("p",null,"Edit your smart contract ",(0,o.kt)("inlineCode",{parentName:"p"},"YourCollectible.sol")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/hardhat/contracts")),(0,o.kt)("p",null,"Edit your frontend ",(0,o.kt)("inlineCode",{parentName:"p"},"App.jsx")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"packages/react-app/src")))}d.isMDXComponent=!0},9263:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/nfttutorial-1-1bcecde0d6c24a3eed9fc34bdee5c603.png"},6193:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/nfttutorial-2-2e1ec049be7cd224c3ea294567be445d.png"},6828:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/nfttutorial-3-9cef64bf92e96a80be7728e6c7060900.png"},7218:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/nfttutorial-4-35548407d349806364dde30de77cf27c.png"},4724:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/nfttutorial-5-68c01ab87c95c18420ea81a9e4a80e43.png"},8392:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/nfttutorial-6-30a7f2aed11a538a0044d137d662adca.png"},7096:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/nfttutorial-7-a181791cad35800d8aabca37c60e5080.png"}}]);