"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6649],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>y});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),u=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return a.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=u(r),y=n,m=p["".concat(d,".").concat(y)]||p[y]||c[y]||l;return r?a.createElement(m,i(i({ref:t},s),{},{components:r})):a.createElement(m,i({ref:t},s))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2212:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const l={},i="Withdraw Relayer Pledge",o={unversionedId:"bridge/relayer/relayerwithdraw",id:"bridge/relayer/relayerwithdraw",title:"Withdraw Relayer Pledge",description:"How can I withdraw my pledge?",source:"@site/docs/bridge/relayer/relayerwithdraw.md",sourceDirName:"bridge/relayer",slug:"/bridge/relayer/relayerwithdraw",permalink:"/docs/bridge/relayer/relayerwithdraw",draft:!1,editUrl:"https://github.com/bttcprotocol/bttc-docs/tree/master/docs/bridge/relayer/relayerwithdraw.md",tags:[],version:"current",lastUpdatedAt:1724138736,formattedLastUpdatedAt:"Aug 20, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Modify Relayer Info",permalink:"/docs/bridge/relayer/relayermodifyinfo"},next:{title:"Deposit and Checkpoint Time Tracking",permalink:"/docs/bridge/deposit-checkpoint-event-tracking"}},d={},u=[{value:"How can I withdraw my pledge?",id:"how-can-i-withdraw-my-pledge",level:2},{value:"APIs of Relayer 2.0 involved",id:"apis-of-relayer-20-involved",level:2},{value:"Relayer query",id:"relayer-query",level:3},{value:"Waiting period query",id:"waiting-period-query",level:3},{value:"unstake",id:"unstake",level:3},{value:"withdrawCollateral",id:"withdrawcollateral",level:3}],s={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"withdraw-relayer-pledge"},"Withdraw Relayer Pledge"),(0,n.kt)("h2",{id:"how-can-i-withdraw-my-pledge"},"How can I withdraw my pledge?"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Pass your Relayer address to call relayerBasic and check your Relayer information, where status denotes the Relayer's current status and stakeAmount denotes the amount of the Relayer pledge."),(0,n.kt)("li",{parentName:"ol"},"If 1 is returned for status, it indicates your pledge is added but the Relayer service is not activated. In this case, you can withdraw your pledge directly by calling withdrawCollateral."),(0,n.kt)("li",{parentName:"ol"},"If 2 is returned for status, it indicates the Relayer service is activated. You need to call the unstake function to stop being a Relayer first. This will trigger the UnStake event, where stakeAmount denotes the amount of pledge to be unstaked, and availableTime denotes the time the pledge available for withdrawal."),(0,n.kt)("li",{parentName:"ol"},"Check your Relayer information again after calling the unstake function. If 3 is returned for status, it indicates you have successfully unstaked your pledge and quit being a Relayer. You may withdraw the pledge by calling withdrawCollateral when availableTime is reached."),(0,n.kt)("li",{parentName:"ol"},"You may view the waiting period by calling timeInterval.")),(0,n.kt)("h2",{id:"apis-of-relayer-20-involved"},"APIs of Relayer 2.0 involved"),(0,n.kt)("h3",{id:"relayer-query"},"Relayer query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function relayerBasic(address relayer) returns(uint256 stakeAmount, uint256 unstakedTime, uint8 status)\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"relayer: the Owner address of the Relayer.")),(0,n.kt)("p",null,"RETURN:Tuple of values (stakeAmount\uff0cunstakedTime\uff0cstatus);"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"stakeAmount: the pledge amount."),(0,n.kt)("li",{parentName:"ul"},"unstakedTime: the time the pledge is unstaked in timestamp."),(0,n.kt)("li",{parentName:"ul"},"status: the status of the Relayer (0 -> Initial status of a new Relayer; 1 -> Pledge added but service not activated; 2 -> Service activated; 3 -> Pledge unstaked). ")),(0,n.kt)("h3",{id:"waiting-period-query"},"Waiting period query"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function timeInterval() view returns (uint)\n\n")),(0,n.kt)("p",null,"RETURN: the maximum period a Relayer needs to wait before the pledge is unstaked. The pledge can be withdrawn after this period."),(0,n.kt)("h3",{id:"unstake"},"unstake"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function unstake() external\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"msg.sender: an account that has added pledge and successfully become a Relayer\nRETURN: No return, reverts on error.")),(0,n.kt)("p",null,"event UnStake(address indexed relayer, uint256 stakeAmount, uint256 availableTime);"),(0,n.kt)("h3",{id:"withdrawcollateral"},"withdrawCollateral"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdrawCollateral() external\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"msg.sender: an account that has added pledge and wants to withdraw the pledge now")),(0,n.kt)("p",null,"RETURN: No return, reverts on error."),(0,n.kt)("p",null,"event WithdrawCollateral(address indexed relayer, uint256 amount);"))}c.isMDXComponent=!0}}]);