"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[604],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(a),k=r,h=m["".concat(s,".").concat(k)]||m[k]||c[k]||l;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>k});var n=a(7462),r=a(7294),l=a(6010),o=a(2389),i=a(7392),s=a(7094),u=a(2466);const p="tabList__CuJ",c="tabItem_LNqP";function m(e){var t,a;const{lazy:o,block:m,defaultValue:k,values:h,groupId:d,className:b}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),N=null!=h?h:f.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),w=(0,i.l)(N,((e,t)=>e.value===t.value));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const T=null===k?k:null!=(t=null!=k?k:null==(a=f.find((e=>e.props.default)))?void 0:a.props.value)?t:f[0].props.value;if(null!==T&&!N.some((e=>e.value===T)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+T+'" but none of its children has the corresponding value. Available values are: '+N.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:v,setTabGroupChoices:g}=(0,s.U)(),[y,C]=(0,r.useState)(T),B=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=d){const e=v[d];null!=e&&e!==y&&N.some((t=>t.value===e))&&C(e)}const O=e=>{const t=e.currentTarget,a=B.indexOf(t),n=N[a].value;n!==y&&(E(t),C(n),null!=d&&g(d,String(n)))},R=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=B.indexOf(e.currentTarget)+1;a=null!=(n=B[t])?n:B[0];break}case"ArrowLeft":{var r;const t=B.indexOf(e.currentTarget)-1;a=null!=(r=B[t])?r:B[B.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":m},b)},N.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>B.push(e),onKeyDown:R,onFocus:O,onClick:O},o,{className:(0,l.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":y===t})}),null!=a?a:t)}))),o?(0,r.cloneElement)(f.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function k(e){const t=(0,o.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},9990:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>k,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),l=a(5488),o=a(5162);const i={},s="Network Details",u={unversionedId:"networks/network",id:"networks/network",title:"Network Details",description:"<Tabs",source:"@site/docs/networks/network.md",sourceDirName:"networks",slug:"/networks/network",permalink:"/docs/networks/network",draft:!1,editUrl:"https://github.com/bttcprotocol/bttc-docs/tree/master/docs/networks/network.md",tags:[],version:"current",lastUpdatedAt:1724138736,formattedLastUpdatedAt:"Aug 20, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Wallet",permalink:"/docs/wallet"},next:{title:"Assets",permalink:"/docs/category/assets"}},p={},c=[{value:"BTTC Network",id:"bttc-network",level:2},{value:"BTTC Infrastructure Providers",id:"bttc-infrastructure-providers",level:3},{value:"ETH Network",id:"eth-network",level:2},{value:"BSC Network",id:"bsc-network",level:2},{value:"TRON Network",id:"tron-network",level:2},{value:"BTTC Donau Testnet",id:"bttc-donau-testnet",level:2},{value:"ETH Goerli Testnet",id:"eth-goerli-testnet",level:2},{value:"BSC Testnet",id:"bsc-testnet",level:2},{value:"TRON Nile Testnet",id:"tron-nile-testnet",level:2}],m={toc:c};function k(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"network-details"},"Network Details"),(0,r.kt)(l.Z,{defaultValue:"mainnet",values:[{label:"BTTC-Mainnet",value:"mainnet"},{label:"BTTC-Testnet",value:"donau"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"mainnet",mdxType:"TabItem"},"BTTC is a layer-2 network of TRON/BSC/Ethereum network. The following is the network structure of the BTTC mainnet:",(0,r.kt)("p",null,(0,r.kt)("img",{src:a(1457).Z,width:"2548",height:"958"})),(0,r.kt)("h2",{id:"bttc-network"},"BTTC Network"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Network Name: BitTorrent Chain Mainnet"),(0,r.kt)("li",{parentName:"ul"},"RPC URL 1: ",(0,r.kt)("a",{parentName:"li",href:"https://rpc.bt.io"},"https://rpc.bt.io")),(0,r.kt)("li",{parentName:"ul"},"RPC URL 2: ",(0,r.kt)("a",{parentName:"li",href:"https://bttc.trongrid.io"},"https://bttc.trongrid.io")),(0,r.kt)("li",{parentName:"ul"},"ChainID: ",(0,r.kt)("inlineCode",{parentName:"li"},"199")),(0,r.kt)("li",{parentName:"ul"},"Symbol: BTT"),(0,r.kt)("li",{parentName:"ul"},"Block Explorer 1: ",(0,r.kt)("a",{parentName:"li",href:"https://bttcscan.com"},"https://bttcscan.com")),(0,r.kt)("li",{parentName:"ul"},"Block Explorer 2: ",(0,r.kt)("a",{parentName:"li",href:"https://scan.bt.io"},"https://scan.bt.io")),(0,r.kt)("li",{parentName:"ul"},"Data Snapshots Download: ",(0,r.kt)("a",{parentName:"li",href:"https://snapshots.bt.io"},"https://snapshots.bt.io"))),(0,r.kt)("h3",{id:"bttc-infrastructure-providers"},"BTTC Infrastructure Providers"),(0,r.kt)("p",null,"You can also use other infrastructure providers' RPC services:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://getblock.io/nodes/bttc/"},"GetBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.ankr.com/rpc/bttc"},"Ankr"))),(0,r.kt)("h2",{id:"eth-network"},"ETH Network"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Network Name: Ethereum Mainnet"),(0,r.kt)("li",{parentName:"ul"},"RPC URL: ",(0,r.kt)("a",{parentName:"li",href:"https://mainnet.infura.io/v3"},"https://mainnet.infura.io/v3")),(0,r.kt)("li",{parentName:"ul"},"ChainID: ",(0,r.kt)("inlineCode",{parentName:"li"},"1")),(0,r.kt)("li",{parentName:"ul"},"Symbol: ETH"),(0,r.kt)("li",{parentName:"ul"},"Block Explorer: ",(0,r.kt)("a",{parentName:"li",href:"https://etherscan.io"},"https://etherscan.io"))),(0,r.kt)("h2",{id:"bsc-network"},"BSC Network"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Network Name: Binance Smart Chain"),(0,r.kt)("li",{parentName:"ul"},"RPC URL: ",(0,r.kt)("a",{parentName:"li",href:"https://bsc-dataseed.binance.org"},"https://bsc-dataseed.binance.org")),(0,r.kt)("li",{parentName:"ul"},"ChainID: ",(0,r.kt)("inlineCode",{parentName:"li"},"56")),(0,r.kt)("li",{parentName:"ul"},"Symbol: BNB"),(0,r.kt)("li",{parentName:"ul"},"Block Explorer: ",(0,r.kt)("a",{parentName:"li",href:"https://bscscan.com"},"https://bscscan.com"))),(0,r.kt)("h2",{id:"tron-network"},"TRON Network"),(0,r.kt)("p",null,"The access to the TRON netowrk requires the Tronlink Chrome plug-in."),(0,r.kt)("p",null,"After logging in to the Tronlink wallet, users need to switch to mainnet."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"RPC URL\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://api.trongrid.io"},"https://api.trongrid.io")),(0,r.kt)("li",{parentName:"ul"},"Block Explorer\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://tronscan.org"},"https://tronscan.org")))),(0,r.kt)(o.Z,{value:"donau",mdxType:"TabItem"},(0,r.kt)("p",null,"BTTC is a layer-2 network of TRON/BSC/Ethereum network. The following is the network structure of the BTTC testnet:\n",(0,r.kt)("img",{src:a(4037).Z,width:"2326",height:"878"})),(0,r.kt)("h2",{id:"bttc-donau-testnet"},"BTTC Donau Testnet"),(0,r.kt)("p",null,"Access to the BTTC Donau test network requires the use of the Metamask wallet, to which a custom RPC network is added with the following parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Network Name: BitTorrent Chain Donau"),(0,r.kt)("li",{parentName:"ul"},"RPC URL: ",(0,r.kt)("a",{parentName:"li",href:"https://pre-rpc.bt.io"},"https://pre-rpc.bt.io")),(0,r.kt)("li",{parentName:"ul"},"ChainID: ",(0,r.kt)("inlineCode",{parentName:"li"},"1029")),(0,r.kt)("li",{parentName:"ul"},"Symbol: BTT"),(0,r.kt)("li",{parentName:"ul"},"Block Explorer 1: ",(0,r.kt)("a",{parentName:"li",href:"https://testscan.bt.io"},"https://testscan.bt.io")),(0,r.kt)("li",{parentName:"ul"},"Block Explorer 2: ",(0,r.kt)("a",{parentName:"li",href:"https://testnet.bttcscan.com"},"https://testnet.bttcscan.com")),(0,r.kt)("li",{parentName:"ul"},"WebSocket: wss://pre-rpc.bt.io:8546"),(0,r.kt)("li",{parentName:"ul"},"Data Snapshots Download: ",(0,r.kt)("a",{parentName:"li",href:"https://test-snapshots.bt.io"},"https://test-snapshots.bt.io"))),(0,r.kt)("h2",{id:"eth-goerli-testnet"},"ETH Goerli Testnet"),(0,r.kt)("p",null,"To access the Goerli Testnet, you need to use the Metamask wallet, add a custom RPC network in the Metamask wallet, the detailed operation process can be referred to: ",(0,r.kt)("a",{parentName:"p",href:"https://mudit.blog/getting-started-goerli-testnet"},"Metamask link Goerli network"),", with the following parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Network Name\uff1aGoerli - Testnet"),(0,r.kt)("li",{parentName:"ul"},"RPC URL\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"},"https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161")),(0,r.kt)("li",{parentName:"ul"},"ChainID\uff1a",(0,r.kt)("inlineCode",{parentName:"li"},"5")),(0,r.kt)("li",{parentName:"ul"},"Symbol\uff1aETH"),(0,r.kt)("li",{parentName:"ul"},"Block Explorer\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://goerli.etherscan.com"},"https://goerli.etherscan.com"))),(0,r.kt)("h2",{id:"bsc-testnet"},"BSC Testnet"),(0,r.kt)("p",null,"To access the BSC Testnet, you need to use the Metamask wallet. Add a custom RPC network to the Metamask wallet, the detailed operation procedure can be found at: ",(0,r.kt)("a",{parentName:"p",href:"https://academy.binance.com/en/articles/connecting-metamask-to-binance-smart-chain"},"Metamask connect to BSC network"),", with the following parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Network Name\uff1aBinace Smart Chain - Testnet"),(0,r.kt)("li",{parentName:"ul"},"RPC URL\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://data-seed-prebsc-1-s1.binance.org:8545/"},"https://data-seed-prebsc-1-s1.binance.org:8545/")),(0,r.kt)("li",{parentName:"ul"},"ChainID\uff1a",(0,r.kt)("inlineCode",{parentName:"li"},"97")),(0,r.kt)("li",{parentName:"ul"},"Symbol\uff1aBNB"),(0,r.kt)("li",{parentName:"ul"},"Block Explorer\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://testnet.bscscan.com"},"https://testnet.bscscan.com"))),(0,r.kt)("h2",{id:"tron-nile-testnet"},"TRON Nile Testnet"),(0,r.kt)("p",null,"The access to the TRON Nile testnet requires the Tronlink Chrome plug-in, and Tronlink already supports Nile."),(0,r.kt)("p",null,"After logging in to the Tronlink wallet, users need to switch to the Nile testnet, apply for a test coin through the faucet with a Tronlink account to complete the Nile testnet environment configuration."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Official Website\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://nileex.io"},"https://nileex.io")),(0,r.kt)("li",{parentName:"ul"},"Block Explorer\uff1a",(0,r.kt)("a",{parentName:"li",href:"https://nile.tronscan.org"},"https://nile.tronscan.org"))))))}k.isMDXComponent=!0},1457:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/network-1-1115871089572600dbbe204d911507dd.png"},4037:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/network-2-3552c82d5cad5b8de640b3fcdb8afae7.png"}}]);