"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1550],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(a),k=n,m=u["".concat(l,".").concat(k)]||u[k]||p[k]||o;return a?r.createElement(m,i(i({ref:t},d),{},{components:a})):r.createElement(m,i({ref:t},d))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5539:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={},i="Staking",s={unversionedId:"validator/staking",id:"validator/staking",title:"Staking",description:"For BTTC Network, any participant can be qualified to become a BTTC's validator by running a full node to earn rewards and collect transaction fees. To ensure the good participation by validators, they lock up some of their BTTC tokens as a stake in the ecosystem.",source:"@site/docs/validator/staking.md",sourceDirName:"validator",slug:"/validator/staking",permalink:"/docs/validator/staking",draft:!1,editUrl:"https://github.com/bttcprotocol/bttc-docs/tree/master/docs/validator/staking.md",tags:[],version:"current",lastUpdatedAt:1724138736,formattedLastUpdatedAt:"Aug 20, 2024",frontMatter:{},sidebar:"validatorSidebar",previous:{title:"Validator Responsibilities",permalink:"/docs/validator/responsibilities"},next:{title:"Reward",permalink:"/docs/validator/rewards"}},l={},c=[{value:"Stake",id:"stake",level:2},{value:"Unstake",id:"unstake",level:2},{value:"Restake",id:"restake",level:2}],d={toc:c};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"staking"},"Staking"),(0,n.kt)("p",null,"For BTTC Network, any participant can be qualified to become a BTTC's validator by running a full node to earn rewards and collect transaction fees. To ensure the good participation by validators, they lock up some of their BTTC tokens as a stake in the ecosystem."),(0,n.kt)("p",null,"Validators in BTTC Network are selected via an on-chain auction process which happens at regular intervals."),(0,n.kt)("p",null,"A validator has two addresses an owner address and a signer address. The staking is done with the owner address."),(0,n.kt)("p",null,"See also ",(0,n.kt)("a",{parentName:"p",href:"/docs/validator/core-components/key-management"},"Key Management"),"."),(0,n.kt)("h2",{id:"stake"},"Stake"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Currently there is limited space to accept new validators."),(0,n.kt)("p",{parentName:"admonition"},"A new validator can only join the active set when a currently active validator unbonds.")),(0,n.kt)("p",null,"To join the validator set, you must stake your BTT tokens. "),(0,n.kt)("h2",{id:"unstake"},"Unstake"),(0,n.kt)("p",null,"Unstaking allows the validator to be out of active pool of validators."),(0,n.kt)("p",null,"To ensure good participation, the validator stake is locked for 80 checkpoints."),(0,n.kt)("h2",{id:"restake"},"Restake"),(0,n.kt)("p",null,"Validators can add more BTT tokens to their stake:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"To earn more rewards."),(0,n.kt)("li",{parentName:"ul"},"To maintain the position in the validator set.")))}p.isMDXComponent=!0}}]);